package gameStory;

import enemies.Enemy;
import gameObjects.GameObject;
import gameObjects.GoldenKey;
import gameObjects.Potion;
import player.Hunter;
import player.Player;
import player.Warrior;
import rooms.Room;
import trivia.Trivia;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class GameStory {
    private Scanner teclado = new Scanner(System.in);
    private String idioma = "";

    private String RED = "\u001B[31m";
    private String GREEN = "\u001B[32m";
    private String RESET = "\u001B[0m";

    public GameStory(String idioma) {
        this.idioma = idioma;
    }

    public GameStory() {
    }

    /**
     * Esta funci√≥n asigna un valor a la variable idioma de la clase gameStory
     */
    public void setIdioma(String idioma) {
        this.idioma = idioma;
    }

    public String getIdioma() {
        return idioma;
    }

    /**
     * Esta funci√≥n se encarga de imprimir un mensaje por consola en base al idioma seleccionado
     *
     * @param es se debe ingresar el texto a mostrar en espa√±ol
     * @param en se debe ingresar el texto a mostrar en ingl√©s
     */
    public void imprimirSegunIdioma(String es, String en) {
        if (this.idioma.equals("ES")) {
            System.out.println(es);
        }
        if (this.idioma.equals("EN")) {
            System.out.println(en);
        }
    }

    public void enterContinuar() {
        if (this.idioma.equals("ES")) {
            System.out.print("Presiona ENTER para continuar...");
        }
        if (this.idioma.equals("EN")) {
            System.out.print("Press ENTER to continue...");
        }

        Scanner teclado = new Scanner(System.in);
        teclado.nextLine();
    }

    public void opcionIncorrecta() {
        imprimirSegunIdioma("‚ö†Ô∏è Opci√≥n incorrecta. intenta nuevamente ‚ö†Ô∏è",
                "‚ö†Ô∏è Incorrect option. Please try again ‚ö†Ô∏è");
        System.out.print("=> ");
    }

    public void instrucciones() {
        imprimirSegunIdioma("\nBienvenido, aventurero. En este juego por consola vas a adentrarte en una mazmorra llena de misterios, criaturas y decisiones cruciales.", "\nWelcome, adventurer. This console game invites you to venture into a dungeon full of mysteries, creatures, and crucial decisions.");
        imprimirSegunIdioma("Deber√°s elegir un personaje, con habilidades √∫nicas seg√∫n su clase, y enfrentarte a los desaf√≠os que pondr√°n a prueba tu ingenio y valent√≠a.", "You must choose a character, with unique abilities according to their class, and face challenges that will test your wit and courage.");
    }

    public Player crearJugador() {
        imprimirSegunIdioma("\nElige tu clase: \n1. ‚öî\uFE0F Guerrero ‚Äì Fuerte y resistente. \n2. \uD83C\uDFF9 Cazador ‚Äì √Ågil y certero.",
                "\nChoose your class: \n1. ‚öî\uFE0F Warrior ‚Äì Strong and tough. \n2. \uD83C\uDFF9 Hunter ‚Äì Agile and accurate.");
        System.out.print("=> ");
        String eleccion = teclado.next();
        Player player = asignarClase(eleccion);
        player.setNivelDificultad(asignarNivelDificultad());
        player.setVidasJugador(asignarVidas(player.getNivelDificultad()));
        return player;
    }

    public void solicitaNombre() {
        imprimirSegunIdioma("\nIngresa tu nombre, viajero: ", "\nInsert your name, traveler: ");
        System.out.print("=> ");
    }

    public void saludo(String nombreJugador) {
        imprimirSegunIdioma("\nSaludos, " + nombreJugador + ", el eco de tu nombre resuena por el pasillo principal de la mazmorra en la que has ingresado... \nObservas a un costado del pasillo una peque√±a mesa con dos objetos, te acercas y consigues leer el mensaje en el pergamino: 'solo puedes elegir una, la otra desaparecer√°, s√© inteligente' ", "Greetings, " + nombreJugador + ", the echo of your name resonates through the main corridor of the dungeon you have entered... \nYou observe to one side of the corridor a small table with two objects, you approach and manage to read the message on the parchment: 'you can only choose one, the other will disappear, be smart'");
    }

    private Player asignarClase(String eleccion) {
        while (!eleccion.equals("1") || !eleccion.equals("2")) {
            if (eleccion.equals("1")) {
                imprimirSegunIdioma("Haz elegido la clase 'Guerrero ‚öîÔ∏è'. Que tu espada te gu√≠e a la gloria.", "You have chosen the 'Warrior ‚öîÔ∏è' class. May your sword guide you to glory.");
                return new Warrior();
            }
            if (eleccion.equals("2")) {
                imprimirSegunIdioma("Has escogido la clase 'Cazador üèπ'. Que tu agilidad te acompa√±e en la traves√≠a.", "You have chosen the 'Hunter \uD83C\uDFF9' class. May your agility accompany you on the journey.");
                return new Hunter();
            }
            imprimirSegunIdioma("Eleccion de clase incorrecta, intenta nuevamente: ",
                    "Incorrect class choice, please try again: ");
            System.out.print("=> ");
            eleccion = teclado.next();
        }
        return null; // return por defecto.
    }

    public Integer asignarVidas(String nivelDificultadJugador) {
        Integer vidas = 0;
        if (nivelDificultadJugador.equals("facil")) {
            vidas = 10;
        }
        if (nivelDificultadJugador.equals("normal")) {
            vidas = 7;
        }
        if (nivelDificultadJugador.equals("dificil")) {
            vidas = 5;
        }
        return vidas;
    }

    public String asignarNivelDificultad() {
        imprimirSegunIdioma("\nElige tu nivel de dificultad: \n1. F√°cil üíö / 2. Normal üíõ / 3. Dif√≠cil ‚ù§Ô∏è",
                "\nChoose your difficulty level: \n1. Easy üíö / 2. Normal üíõ / 3. Hard Ô∏è‚ù§Ô∏è");
        System.out.print("=> ");
        String eleccionDeNivel = teclado.next();

        while (!eleccionDeNivel.equals("1") || !eleccionDeNivel.equals("2") || !eleccionDeNivel.equals("3")) {
            if (eleccionDeNivel.equals("1")) {
                imprimirSegunIdioma("\nHas escogido el nivel 'F√°cil', inicias tu aventura con 10 puntos de vida ‚ù§Ô∏è.",
                        "\nYou have chosen 'Easy' level, you begin your adventure with 10 life points Ô∏èÔ∏è‚ù§Ô∏è.");
                eleccionDeNivel = "facil";
                break;
            }
            if (eleccionDeNivel.equals("2")) {
                imprimirSegunIdioma("\nHas escogido el nivel 'Normal', inicias tu aventura con 7 puntos de vida ‚ù§Ô∏è.",
                        "\nYou have chosen 'Normal' level, you begin your adventure with 7 life points Ô∏èÔ∏è‚ù§Ô∏è.");
                eleccionDeNivel = "normal";
                break;
            }
            if (eleccionDeNivel.equals("3")) {
                imprimirSegunIdioma("\nHas escogido el nivel 'Dificil', inicias tu aventura con 5 puntos de vida ‚ù§Ô∏è.", "\nYou have chosen 'Hard' level, you begin your adventure with 5 life points ‚ù§Ô∏è.");
                eleccionDeNivel = "dificil";
                break;
            }
            imprimirSegunIdioma("Eleccion de nivel incorrecta, intenta nuevamente: ",
                    "Incorrect level choice, please try again: ");
            System.out.print("=> ");
            eleccionDeNivel = teclado.next();
        }
        return eleccionDeNivel;
    }

    public List<GameObject> elegirObjetoInicial() {
        List<GameObject> objetos = new ArrayList<>();

        String nombrePocion = "";
        String nombreLlave = "";
        if (idioma.equals("ES")) {
            nombrePocion = "Poci√≥n üß™";
            nombreLlave = "Llave dorada üîë";
        }
        if (idioma.equals("EN")) {
            nombrePocion = "Potion üß™";
            nombreLlave = "Golden key üîë";
        }

        imprimirSegunIdioma("\n¬øQu√© opci√≥n escoges?", "Which option do you choose?");
        imprimirSegunIdioma("1. Llave dorada üîë \n2. Poci√≥n üß™", "1. Golden key üîë \n2. Potion üß™");
        System.out.print("=> ");
        String eleccionDeObjeto = teclado.next();

        while (!eleccionDeObjeto.equals("1") || !eleccionDeObjeto.equals("2")) {
            if (eleccionDeObjeto.equals("1")) {
                imprimirSegunIdioma(
                        "\nHas escogido la llave dorada üóùÔ∏è, observas como la poci√≥n üß™ se desvanece. \nLa llave dorada ha sido agregada a tu inventario.",
                        "\nYou chose the golden key üóùÔ∏è, and you see the potion üß™ go away. \nThe golden key has been added to your inventory.");
                objetos.add(new GoldenKey(nombreLlave));
                break;
            }
            if (eleccionDeObjeto.equals("2")) {
                imprimirSegunIdioma(
                        "\nHas escogido la poci√≥n üß™, observas como la llave dorada üóùÔ∏è se desvanece. \nLa poci√≥n ha sido agregada a tu inventario.",
                        "\nYou chose the potion üß™, and you see the golden key üóùÔ∏è go away. \nThe potion has been added to your inventory.");

                objetos.add(new Potion(nombrePocion));
                break;
            }
            imprimirSegunIdioma("Eleccion de objeto incorrecta, intenta nuevamente: ",
                    "Object election incorrect, try again please: ");
            System.out.print("=> ");
            eleccionDeObjeto = teclado.next();
        }

        return objetos;
    }

    public void ingresarASala(Room room) {
        if (room.getTipoDeSala().equals("vacio")) {
            imprimirSegunIdioma("\nEntras con sigilo a la sala, pero la sala est√° cubierta de polvo, silenciosa y vac√≠a... \nParece que nadie ha estado aqu√≠ en siglos. ‚õìÔ∏è", "\nYou enter the room stealthily, but the room is covered in dust, silent and empty... \nIt seems that no one has been here for centuries. ‚õìÔ∏è");
        }
        if (room.getTipoDeSala().equals("enemigo")) {
            imprimirSegunIdioma("\nHas entrado en una sala oscura y h√∫meda... Una figura emerge desde un rinc√≥n...", "\nYou have entered a dark and damp room... A figure emerges from a corner...");
        }
        if (room.getTipoDeSala().equals("tesoro")) {
            imprimirSegunIdioma("\n \uD83C\uDF81 Has entrado en una sala decorada con runas antiguas. \nEn el centro, yace un cofre rodeado de una energ√≠a vibrante...\n", "\n \uD83C\uDF81 You have entered a room decorated with ancient runes. \nIn the center, there is a chest surrounded by vibrant energy...");
        }
    }

    public void apareceEnemigo(String enemigo) {
        imprimirSegunIdioma(
                "\n¬°Un " + enemigo + " aparece!",
                "\nAn " + enemigo + " appears!");
    }

    public void accionesJugadorEnSala() {
        imprimirSegunIdioma("¬øQu√© deseas hacer?", "What do you want to do?");
        imprimirSegunIdioma("1. Atacar üó°Ô∏è / 2. Usar inventario üß≥ / 3. Saltar turno, perderas una vida üíî",
                "1. Attack üó° / 2. Use inventory üß≥ / 3. Skip turn, you will lose a life üíî");
        System.out.print("=> ");
    }

    public void accionesJugadorEnSalaVacia() {
        imprimirSegunIdioma("\n¬øQu√© deseas hacer?", "\nWhat do you want to do?");
        imprimirSegunIdioma("1. Usar inventario üß≥ / 2. Avanzar üö∂üèª‚Äç‚ôÇÔ∏è",
                "1. Use inventory üß≥ / 2. Move forward üö∂üèª‚Äç‚ôÇÔ∏è");
        System.out.print("=> ");
    }

    public void comienzaCombate(Player player, Enemy enemie) {
        imprimirSegunIdioma("¬°Comienza el combate entre " + player.getNombreJugador() + " y " + enemie.getTipo() + "!",
                "The fight between" + player.getNombreJugador() + " and " + enemie.getTipo() + " begins");
        enterContinuar();
    }

    public void rondas(Player player, Enemy enemie, GameStory gameStory, int ronda) {
        System.out.println("\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        imprimirSegunIdioma("      ‚öîÔ∏è  RONDA " + ronda + " / 3  ‚öîÔ∏è", "      ‚öîÔ∏è  ROUND " + ronda + " / 3  ‚öîÔ∏è");
        System.out.println("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n");
        System.out.println("üë§ " + player.getNombreJugador() + " " + player.claseJugador(player, gameStory) + " " + player.vidasEmojis(player.getVidasJugador()));
        System.out.println("üíÄ " + enemie.getTipo() + " " + enemie.vidasEmojis(enemie.getVidas()));
    }

    public void mostrarPregunata(Trivia trivia, GameStory gameStory) {

        System.out.println(trivia.getPregunta());
        System.out.println("1. " + trivia.getOpcion1());
        System.out.println("2. " + trivia.getOpcion2());
        if (gameStory.getIdioma().equals("ES")) {
            System.out.print("Ingresa tu respuesta => ");
        }

        if (gameStory.getIdioma().equals("EN")) {
            System.out.print("Enter your answer => ");
        }
    }

    public void gameOver() {
        imprimirSegunIdioma("GAME OVER üíî‚ò†Ô∏è", "GAME OVER üíî‚ò†Ô∏è");
    }

    public void playerWin(Player player, GameStory gameStory) {
        imprimirSegunIdioma(
                player.getNombreJugador() + " " + player.claseJugador(player, gameStory) + " gana el combate",
                player.getNombreJugador() + " " + player.claseJugador(player, gameStory) + "wins the battle");
    }

    public void player3RondasPerdidas(Player player, Enemy enemie) {
        String ES = "Sientes que despu√©s de esa √∫ltima ronda la confusi√≥n es mayor üí≠, y el cansancio se vuelve mayor... \nLa mazmorra consume toda tu energia y con ello todas tus vidas... üíîüíÄ";
        String EN = "You feel that after that last round, the confusion is greater üí≠, and the exhaustion grows stronger...\nThe dungeon drains all your energy, and with it, all your lives... üíîüíÄ";
        imprimirSegunIdioma(ES, EN);
    }

    public void playerAtaca(Player player, Enemy enemie, GameStory gameStory) {
        String ES = "";
        String EN = "";

        if (player.claseJugador(player, gameStory).contains("Guerrero") ||
                player.claseJugador(player, gameStory).contains("Warrior")) {
            ES = GREEN + "‚úÖ ¬°Respuesta correcta!\n" + player.getNombreJugador() + " " + player.claseJugador(player, gameStory) + " " + player.claseJugador(player, gameStory)
                    + " usa su espada y ataca a "
                    + enemie.getTipo() + ", pierde una vida üíî" + RESET;
            EN = GREEN + "‚úÖ ¬°Correct answer!\n" + player.getNombreJugador() + " " + player.claseJugador(player, gameStory)
                    + " uses their sword and attacks "
                    + enemie.getTipo() + ", loses one life üíî" + RESET;
        }

        if (player.claseJugador(player, gameStory).contains("Cazador") ||
                player.claseJugador(player, gameStory).contains("Hunter")) {
            ES = GREEN + "‚úÖ ¬°Respuesta correcta!\n" + player.getNombreJugador() + " " + player.claseJugador(player, gameStory)
                    + " usa su arco y ataca a "
                    + enemie.getTipo() + ", pierde una vida üíî" + RESET;
            EN = GREEN + "‚úÖ ¬°Correct answer!\n" + player.getNombreJugador()
                    + " uses their arch and attacks "
                    + enemie.getTipo() + ", loses one life üíî" + RESET;
        }
        imprimirSegunIdioma(ES, EN);
    }

    public void enemieAtaca(Enemy enemie, Player player) {
        imprimirSegunIdioma(RED + "¬°Has fallado! " + enemie.getTipo() + " ataca y pierdes una vida üíî" + RESET,
                RED + "You failed! " + enemie.getTipo() + " üíÄ attacks and you lose a life üíî" + RESET);
    }

    public void playerSaltaTurno(Player player, Enemy enemie, GameStory gameStory, Scanner teclado) {
        String ES = RED + player.getNombreJugador() + " " + player.claseJugador(player, gameStory) + " parece confundido üòµ‚Äçüí´ " +
                enemie.getTipo() + " üíÄ aprovecha la distracci√≥n y ataca, pierdes una vida! üíî" + RESET;
        String EN = RED + player.getNombreJugador() + " " + player.claseJugador(player, gameStory) + " looks confused üòµ‚Äçüí´ " +
                enemie.getTipo() + " üíÄ takes advantage of the distraction and attacks, you lose a life! üíî" + RESET;
        imprimirSegunIdioma(ES, EN);
    }

    public void termina3RondasSinMorir(Player player, Enemy enemie, GameStory gameStory) {
        String nombrePlayer = player.getNombreJugador() + " " + player.claseJugador(player, gameStory);
        String ES = nombrePlayer + " logras distraer a " + enemie.getTipo() + ", abandonas la sala con sigilo y te adentras en la siguiente.";
        String EN = nombrePlayer + " manages to distract " + enemie.getTipo() + ", you quietly leave the room and head into the next one.";
        imprimirSegunIdioma(ES, EN);
    }

    //todo: terminar EN
    public void playerUsaPocion(Player player, GameStory gameStory) {
        String nombrePlayer = player.getNombreJugador() + " " + player.claseJugador(player, gameStory);
        String ES = nombrePlayer + " utilizas la poci√≥n de tu inventario, recuperas una vida ‚ù§Ô∏è";
        String EN = nombrePlayer + " uses the potion from your inventory, you recover one life ‚ù§Ô∏è";
        imprimirSegunIdioma(ES, EN);
    }

    public void eleccionDeObjeto(Player player, GameStory gameStory, Scanner teclado) {
        String ES = "0. Salir \n¬øQu√© objeto usar√°s?";
        String EN = "0. Exit \nWhich item will you use?";
        System.out.print("=> ");

        if (player.getInventory().isEmpty()) {
            imprimirSegunIdioma("Inventario vacio üòñ","Empty inventory üòñ");
        } else {
            boolean terminarEleccion = false;
            while (!terminarEleccion) {
                player.verInventario(player);
                imprimirSegunIdioma(ES, EN);

                try {
                    int opcion = teclado.nextInt();
                    teclado.nextLine();

                    if (opcion == 0) {
                        terminarEleccion = true;
                    } else if (opcion > 0 && opcion <= player.getInventory().size()) {
                        GameObject object = player.getInventory().get(opcion - 1);
                        if (object.isUsable() == true) {
                            object.consumirObjeto(player,gameStory);
                            player.getInventory().remove(player.getInventory().get(opcion - 1));
                        } else {
                            imprimirSegunIdioma("Usar este objeto no causar√° ning√∫n efecto.","Using this item will have no effect.");
                        }
                        terminarEleccion = true;
                    } else {
                        opcionIncorrecta();
                    }

                } catch (Exception e) {
                    teclado.nextLine();
                    opcionIncorrecta();
                }
            }
        }
    }

    public void playerSaleDeSalaVacia(Player player, GameStory gameStory) {
        String nombrePlayer = player.getNombreJugador() + " " + player.claseJugador(player, gameStory);
        String ES = "\n" + nombrePlayer+ " buscas seguir con la aventura y continuas a la siguiente sala. üë£";
        String EN = "\n" + nombrePlayer + "you choose to continue the adventure and proceed to the next room. üë£";

        imprimirSegunIdioma(ES, EN);
    }

    public void accionesJugadorEnSalaDelTosoro() {
        imprimirSegunIdioma("\n¬øQu√© deseas hacer?", "\nWhat do you want to do?");
        imprimirSegunIdioma("1. Ver que hay dentro üëÄ / 2. Pasar üö∂üèª‚Äç‚ôÇÔ∏è",
                "1. See what's inside üëÄ / 2. Move on üö∂üèª‚Äç‚ôÇÔ∏è");
        System.out.print("=> ");
    }

    public void jugadorEncuentraTesoro(Player player, GameStory gameStory, GameObject tesoro) {
        String nombrePlayer = player.getNombreJugador() + " " + player.claseJugador(player, gameStory);

        String ES = "ü™ô " + nombrePlayer + " abre un antiguo cofre cubierto de polvo... ¬°Dentro encuentra *" + tesoro.getNombre() + "*! ‚ú®\n"
                + "üì¶ El objeto ha sido guardado en tu inventario.";
        String EN = "ü™ô " + nombrePlayer + " opens an ancient dust-covered chest... Inside lies *" + tesoro.getNombre() + "*! ‚ú®\n"
                + "üì¶ The item has been added to your inventory.";
        imprimirSegunIdioma(ES, EN);
    }

    public void resumenFinDelJuego(Player player, GameStory gameStory) {
        String nombrePlayer = player.getNombreJugador() + " " + player.claseJugador(player, gameStory);
        String ES = "";
        String EN = "";

        List<GameObject> objetos = player.getInventory() != null ? player.getInventory() : new ArrayList<>();
        List<Enemy> enemigos = player.getEnemigosEnfrentados() != null ? player.getEnemigosEnfrentados() : new ArrayList<>();

        ES = "\nüéâ ¬°" + nombrePlayer + " ha logrado sobrevivir a los horrores de la mazmorra y has salido con vida! üó°Ô∏èüè∞";
        EN = "\nüéâ " + nombrePlayer + " has survived the horrors of the dungeon and escaped alive! üó°Ô∏èüè∞";
        imprimirSegunIdioma(ES, EN);

        ES = "üëæ Te has enfrentado a " + enemigos.size() + " enemigos durante tu traves√≠a:";
        EN = "üëæ You faced " + enemigos.size() + " enemies during your journey:";
        imprimirSegunIdioma(ES, EN);

        if (!enemigos.isEmpty()) {
            int x = 1;
            for (Enemy enemie : enemigos) {
                System.out.println("   " + x + ". " + enemie.getTipo());
                x++;
            }
        }

        ES = "üéí Has recolectado " + objetos.size() + " objetos m√°gicos y tesoros:";
        EN = "üéí You collected " + objetos.size() + " magical items and treasures:";
        imprimirSegunIdioma(ES, EN);

        if (!objetos.isEmpty()) {
            int z = 1;
            for (GameObject objeto : objetos) {
                System.out.println("   " + z + ". " + objeto.getNombre());
                z++;
            }
        }

        ES = "üèÜ ¬°Gloria y fortuna te esperan m√°s all√° de las sombras de la mazmorra!";
        EN = "üèÜ Glory and fortune await you beyond the shadows of the Dungeon!";
        imprimirSegunIdioma(ES, EN);
    }
}

